#!/bin/bash
# Due to the major shift in direction for the operator-sdk package, we need to continue to use
# the 0.19.2 version until we can fully switch over to the latest project format.  This script
# will download the 0.19.2 package and symlink the binary to /usr/local/bin/operator-sdk
#
# The storage location for the downloaded client version is /usr/local/operator-sdk/{version}/

# gh release list --repo operator-framework/operator-sdk

set -o pipefail

VERSION=$(gh release list --repo operator-framework/operator-sdk --limit 1 | cut -f3)

readonly program="$(basename "$0")"
verbose=0

usage() {
  echo "
    This script downloads the specified operator-sdk version and symlinks it into /usr/local/bin/
    usage: $program
    options:
      -l, --list                    List available versions
      -v, --version                 Specify the version to download
      -h, --help                    Show this help.
  " | sed -E 's/^ {4}//'
}

versionlist() {
    echo "VERSIONS"
    gh release list --repo operator-framework/operator-sdk --limit 20
}

while getopts ":v:hl" opt; do
   case $opt in
      v|--version)
         VERSION="${OPTARG}"
         ;;
      l|--list)
         versionlist
	 exit 0
         ;;
      h|--help)
	 usage
         exit 1
         ;;
   esac
done
shift $((OPTIND-1))

if [[ -z ${VERSION} ]]; then
	usage
	exit 1
fi

echo "Installing/Activating ${VERSION}..."

if [ ! -d "/usr/local/operator-sdk" ]; then
  MY_LOGON=$(whoami)
  echo ${MY_LOGON}
  sudo mkdir -p /usr/local/operator-sdk
  sudo chown ${MY_LOGON}:admin /usr/local/operator-sdk
fi;

url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/checksums.txt"
if curl --output /dev/null --silent --head --fail "$url"; then
  # MacOS = 'darwin', Linux = 'linux', Windows = 'windows'
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    TARGET_OS=linux
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    TARGET_OS=darwin
  fi
  LINK_TARGET="/usr/local/operator-sdk/${VERSION}/operator-sdk_${TARGET_OS}_amd64"
else
  # MacOS = 'darwin', Linux = 'linux', Windows = 'windows'
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    TARGET_OS=linux-gnu
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    TARGET_OS=apple-darwin
  fi
  LINK_TARGET="/usr/local/operator-sdk/${VERSION}/operator-sdk-${VERSION}-x86_64-${TARGET_OS}"
fi

if [ ! -d "/usr/local/operator-sdk/${VERSION}" ]; then
  mkdir -p "/usr/local/operator-sdk/${VERSION}"

  # operator-sdk project changed the URLs for the release artifacts at v1.3.0
  url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/checksums.txt"
  if curl --output /dev/null --silent --head --fail "$url"; then
    # Download using NEW URL format
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.3.0/operator-sdk_darwin_amd64
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.3.0/operator-sdk_linux_amd64
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.3.0/checksums.txt
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.3.0/checksums.txt.asc
    url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/checksums.txt"
    dl_name="/usr/local/operator-sdk/${VERSION}/checksums.txt"
    curl -Ls ${url} -o ${dl_name}

    url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/checksums.txt.asc"
    dl_name="/usr/local/operator-sdk/${VERSION}/checksums.txt.asc"
    curl -Ls ${url} -o ${dl_name}

    url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/operator-sdk_${TARGET_OS}_amd64"
    dl_name="/usr/local/operator-sdk/${VERSION}/operator-sdk_${TARGET_OS}_amd64"
    curl -Ls ${url} -o ${dl_name}

  else
    # Download using OLD URL format
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.2.0 /operator-sdk-v1.2.0 -x86_64-apple-darwin
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.2.0 /operator-sdk-v1.2.0 -x86_64-apple-darwin.asc
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.2.0 /operator-sdk-v1.2.0 -x86_64-linux-gnu
    # https://github.com/operator-framework/operator-sdk/releases/download/v1.2.0 /operator-sdk-v1.2.0 -x86_64-linux-gnu.asc
    # https://github.com/operator-framework/operator-sdk/releases/download/v0.19.4/operator-sdk-v0.19.4-x86_64-apple-darwin
    # https://github.com/operator-framework/operator-sdk/releases/download/v0.19.4/operator-sdk-v0.19.4-x86_64-apple-darwin.asc
    url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/operator-sdk-${VERSION}-x86_64-${TARGET_OS}.asc"
    dl_name="/usr/local/operator-sdk/${VERSION}/operator-sdk-${VERSION}-x86_64-${TARGET_OS}.asc"
    curl -Ls "${url}" -o "${dl_name}"

    url="https://github.com/operator-framework/operator-sdk/releases/download/${VERSION}/operator-sdk-${VERSION}-x86_64-${TARGET_OS}"
    dl_name="/usr/local/operator-sdk/${VERSION}/operator-sdk-${VERSION}-x86_64-${TARGET_OS}"
    curl -Ls "${url}" -o "${dl_name}"

  fi
fi

if [ -f "${LINK_TARGET}" ]; then
  chmod 775 "${LINK_TARGET}"
fi
if [ -L "/usr/local/bin/operator-sdk" ] || [ -f "/usr/local/bin/operator-sdk" ]; then
  rm "/usr/local/bin/operator-sdk"
fi
ln -s "${LINK_TARGET}" "/usr/local/bin/operator-sdk"

operator-sdk version
