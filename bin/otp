#!/usr/bin/env bash

# requires 'sponge' from the moreutils package
# brew install moreutils
# yum install -y moreutils

if [[ -z $1 ]]; then
	echo
	echo "Usage:"
	echo "   otp aws"
	echo
	echo "Configuration: $HOME/.otpkeys"
	echo "Format:"
        echo "{"
        echo '  "aws": {'
        echo '    "vault": "automation",'
        echo '    "key": "splice_aws",'
        echo '    "lastotp": "661084"'
        echo '  },'
        echo "{"
	exit
fi

if [[ -z $2 ]]; then
  HOMELOC=${HOME}
else
  HOMELOC=$2
fi

OTPKEYLOC=$(cat ${HOMELOC}/.otpkeys | jq -r ".${1}.key")
OTPVAULT=$(cat ${HOMELOC}/.otpkeys | jq -r ".${1}.vault")
LASTOTP=$(cat ${HOMELOC}/.otpkeys | jq -r ".${1}.lastotp")

if [[ -z "${OTPKEYLOC}" ]] || [[ "${OTPKEYLOC}" == "null" ]]; then
  echo "$(basename $0): Bad Service Name '$1'"
  $0
  echo "Current Services Defined:"
  cat ${HOMELOC}/.otpkeys | jq -r '. | to_entries[].key'
  exit 1
fi

if [[ `uname` = "Darwin" ]]; then
  OTPKEY=$(security find-generic-password -l "${OTPKEYLOC}" -w "${OTPVAULT}.keychain-db")
  if [[ -z "${OTPKEY}" ]]; then
    echo "$(basename $0): Bad vault lookup '$1'"
    $0
    exit 1
  fi
elif [ -f /.dockerenv ]; then
  export VAULT_SKIP_VERIFY="true"
  export VAULT_TOKEN=${VAULT_TOKEN:-$(cat ~/.vault-token-local)}
  VAULT_DOCKER_IP=$(docker inspect splice_vault | jq -r '.[0].NetworkSettings.IPAddress')
  if [[ ! -z "${VAULT_TOKEN}" ]]; then
    OTPKEY=$(vault kv get -field=value -format=table --address="http://${VAULT_DOCKER_IP}:8200" secret/${OTPVAULT}/${OTPKEYLOC})
  else
    echo "Could not determine Vault Token, ~/.vault-token-local"
    exit 1
  fi
  unset VAULT_SKIP_VERIFY
  unset VAULT_TOKEN
else
  echo "Support currently only for running under Mac OSX, or Docker Container with a Vault image running as 'splice_vault'"
  exit 1
fi

OTP=$(oathtool --totp -b "$OTPKEY")
while [[ "${OTP}" == "${LASTOTP}" ]]; do
  sleep 5
  OTP=$(oathtool --totp -b "$OTPKEY")
done
echo "${OTP}"
cat ${HOMELOC}/.otpkeys | jq ".${1}.lastotp |= \"${OTP}\"" | sponge ${HOMELOC}/.otpkeys
if [[ `uname` = "Darwin" ]]; then
	oathtool --totp -b "$OTPKEY" | pbcopy
fi

